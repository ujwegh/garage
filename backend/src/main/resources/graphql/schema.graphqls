schema {
    query: Query
    mutation: Mutation
}

type Query {
    bookById(id: ID): Book
    allBooks: [Book]
    users: [User]
}
type Mutation {
#    register(userName: String!, password: String!, role: Role!): String
    update(user: UserDto!): String
    enableUser(id: ID!, enable: Boolean!): String
}

type Book {
    id: ID
    name: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID
    firstName: String
    lastName: String
}

enum Role {
    ROLE_CLIENT
    ROLE_MANAGER
}

enum Gender{
    MALE
    FEMALE
    CUSTOM
}

type UserRegitrationDto {
    userName: String
    password: String
    role: Role
}

type User {
    id: ID
    createdDate: String
    updatedDate: String
    lastLoginDate: String
    email: String
    firstName: String
    lastName: String
    gender: Gender
    phone: String
    oauthClientId: String
}

input UserDto{
    id: ID!
    updatedDate: String
    email: String
    firstName: String
    lastName: String
    gender: Gender
    phone: String
}